<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Taleeb Dev</title>
    <link>https://taleeb.dev/categories/bash/</link>
    <description>Recent content in Bash on Taleeb Dev</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 Mar 2018 00:56:24 -0400</lastBuildDate>
    <atom:link href="https://taleeb.dev/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Change Directory Up Faster With Back up Command</title>
      <link>https://taleeb.dev/change-directory-up-faster-with-back-up-command/</link>
      <pubDate>Thu, 15 Mar 2018 00:56:24 -0400</pubDate>
      <guid>https://taleeb.dev/change-directory-up-faster-with-back-up-command/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://taleeb.dev/img/beach-beachlife-salt-water-21859.jpg&#34; alt=&#34;Bash Shell photo&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://donovanbrown.com&#34;&gt;Donovan Brown&lt;/a&gt; wrote a good &lt;a href=&#34;http://donovanbrown.com/post/Why-cd-when-you-can-just-backup&#34;&gt;article&lt;/a&gt; showcasing how you can use a custom PowerShell function to navigate up directories without the need to type multiple &lt;code&gt;cd ..&lt;/code&gt; . I find his idea interesting and could be of important time saver if you spend a lot of time working with PowerShell.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately (or fortunately depends how you see it) nowadays I don&amp;rsquo;t use PowerShell a lot, and when I do my usage is limited to few PowerCLI commands, but I do spend a considerable time interacting with Linux Shell, so the natural thing to do is to port Donovan&amp;rsquo;s idea into a Bash script. The Bash script is going to be different from the PowerShell one, but the concept remains the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible: Directory Layout</title>
      <link>https://taleeb.dev/ansible-directory-layout/</link>
      <pubDate>Thu, 15 Feb 2018 23:48:26 -0500</pubDate>
      <guid>https://taleeb.dev/ansible-directory-layout/</guid>
      <description>&lt;p&gt;According to Ansible&amp;rsquo;s &lt;a href=&#34;http://docs.ansible.com/ansible/latest/playbooks_best_practices.html&#34; title=&#34;Ansible best practices&#34;&gt;Best Practices&lt;/a&gt;, There are many possible ways to organize playbook content, and that the usage of such layout should fit your needs. The only thing I highly recommend is using &lt;em&gt;roles&lt;/em&gt; instead of tasks, this will give your flexibility and better organization of your code.&lt;/p&gt;&#xA;&lt;p&gt;Ansible provide two examples of directory layouts. the first one is pretty simple and the one I go to when I am working on a small environement with a sample production and staging inventory files:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bash - Paths and file names manipulation</title>
      <link>https://taleeb.dev/bash-paths-and-file-names-manipulation/</link>
      <pubDate>Tue, 06 Feb 2018 22:10:18 -0400</pubDate>
      <guid>https://taleeb.dev/bash-paths-and-file-names-manipulation/</guid>
      <description>&lt;p&gt;In this post, we look dive into some of the interesting way we can use Bash to work with file names and paths, this usually helpful when you want to put a quick Bash script to copy or move/rename file. I recently had to deal with hundreds of log files generataed by the dozens of containers, the issue was each container writes logs inside a folder, but the logs files are basically have the same name inside each folder.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
